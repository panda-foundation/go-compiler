namespace;

import libc;

//var a int;

/*
enum color
{
    red,
    green,
    blue
}*/

public class base
{
    public function create()
    {
        libc.puts("base contruction");
    }

    public function destroy()
    {
        libc.puts("base destruction");
    }
}

public class derive : base
{
    public function create()
    {
        libc.puts("derive contruction");
    }

    public function destroy()
    {
        libc.puts("derive destruction");
    }
}

public function main() int
{
    //var s something = new something();
    /*
    a++;

    if (a == 0)
    {
        libc.puts("a is 0");
    }
    if (a == 1)
    {
        libc.puts("a is 1");
    }

    switch (a)
    {
        case 0:
        {
            libc.puts("a is 0");
            break;
        }
        case 1:
        {
            libc.puts("a is 1");
            break;
        }
        default:
            libc.puts("default");
    }

    for (; a < 5; a++)
    {
        libc.puts("loop");
    }

    libc.printf("a = %d \n", a);*/

    //var b int = 9;
    //libc.printf("b = %d \n", b);
    //var c counter = new counter();
    //new counter();
    new base();

    new derive();
    
    return 0;
}